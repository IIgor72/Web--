openapi: 3.0.0
info:
  title: VK Messenger API
  version: 1.0.0
  description: |
    VK Messenger API предоставляет интерфейс для работы с основными сущностями системы: сообщениями, постами, пользователями и чатами. 
    Это позволяет интеграторам создавать, обновлять, читать и удалять данные в соответствии с требованиями приложения.

paths:
  /messages:
    get:
      summary: Получить список сообщений
      description: Возвращает список всех сообщений в системе.
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
              examples:
                example1:
                  summary: Пример ответа
                  value:
                    - id: "1"
                      chatId: "chat123"
                      content: "Hello, world!"
                      createdAt: "2024-11-21T10:00:00Z"
                    - id: "2"
                      chatId: "chat456"
                      content: "How are you?"
                      createdAt: "2024-11-21T10:05:00Z"
    post:
      summary: Отправить новое сообщение
      description: Создаёт новое сообщение и добавляет его в указанный чат.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMessage'
            examples:
              example1:
                summary: Пример запроса
                value:
                  chatId: "chat123"
                  content: "Hello, world!"
      responses:
        '201':
          description: Сообщение отправлено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
              examples:
                example1:
                  summary: Пример ответа
                  value:
                    id: "1"
                    chatId: "chat123"
                    content: "Hello, world!"
                    createdAt: "2024-11-21T10:00:00Z"
  /messages/{messageId}:
    get:
      summary: Получить сообщение по ID
      description: Возвращает данные конкретного сообщения по его идентификатору.
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
            example: "1"
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
              examples:
                example1:
                  summary: Пример ответа
                  value:
                    id: "1"
                    chatId: "chat123"
                    content: "Hello, world!"
                    createdAt: "2024-11-21T10:00:00Z"
    put:
      summary: Обновить сообщение
      description: Изменяет содержимое существующего сообщения.
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
            example: "1"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMessage'
            examples:
              example1:
                summary: Пример запроса
                value:
                  chatId: "chat123"
                  content: "Updated message content"
      responses:
        '200':
          description: Сообщение обновлено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
              examples:
                example1:
                  summary: Пример ответа
                  value:
                    id: "1"
                    chatId: "chat123"
                    content: "Updated message content"
                    createdAt: "2024-11-21T10:00:00Z"
    delete:
      summary: Удалить сообщение
      description: Удаляет сообщение по его идентификатору.
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
            example: "1"
      responses:
        '204':
          description: Сообщение удалено
  /posts:
    get:
      summary: Получить список постов
      description: Возвращает список всех постов новостной ленты.
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
              examples:
                example1:
                  summary: Пример ответа
                  value:
                    - id: "1"
                      userId: "user123"
                      content: "First post"
                      createdAt: "2024-11-21T10:00:00Z"
                    - id: "2"
                      userId: "user456"
                      content: "Second post"
                      createdAt: "2024-11-21T10:05:00Z"
    post:
      summary: Создать новый пост
      description: Добавляет новый пост в новостную ленту.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPost'
            examples:
              example1:
                summary: Пример запроса
                value:
                  userId: "user123"
                  content: "First post"
      responses:
        '201':
          description: Пост создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
              examples:
                example1:
                  summary: Пример ответа
                  value:
                    id: "1"
                    userId: "user123"
                    content: "First post"
                    createdAt: "2024-11-21T10:00:00Z"
  /posts/{postId}:
    get:
      summary: Получить пост по ID
      description: Возвращает данные конкретного поста по его идентификатору.
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
            example: "1"
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
              examples:
                example1:
                  summary: Пример ответа
                  value:
                    id: "1"
                    userId: "user123"
                    content: "First post"
                    createdAt: "2024-11-21T10:00:00Z"
    put:
      summary: Обновить пост
      description: Изменяет содержимое существующего поста.
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
            example: "1"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPost'
            examples:
              example1:
                summary: Пример запроса
                value:
                  userId: "user123"
                  content: "Updated post content"
      responses:
        '200':
          description: Пост обновлён
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
              examples:
                example1:
                  summary: Пример ответа
                  value:
                    id: "1"
                    userId: "user123"
                    content: "Updated post content"
                    createdAt: "2024-11-21T10:00:00Z"
    delete:
      summary: Удалить пост
      description: Удаляет пост по его идентификатору.
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
            example: "1"
      responses:
        '204':
          description: Пост удалён
  /users:
    get:
      summary: Получить список пользователей
      description: Возвращает список всех пользователей системы.
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Создать нового пользователя
      description: Добавляет нового пользователя в систему.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '201':
          description: Пользователь создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /chats:
    get:
      summary: Получить список чатов
      description: Возвращает список всех чатов в системе.
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Chat'
    post:
      summary: Создать новый чат
      description: Создаёт новый чат и добавляет его в систему.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewChat'
      responses:
        '201':
          description: Чат создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
components:
  schemas:
    Message:
      type: object
      properties:
        id:
          type: string
          description: Уникальный идентификатор сообщения
          example: "1"
        chatId:
          type: string
          description: Идентификатор чата, в который отправлено сообщение
          example: "chat123"
        content:
          type: string
          description: Текст сообщения
          example: "Hello, world!"
        createdAt:
          type: string
          format: date-time
          description: Дата и время отправки сообщения
          example: "2024-11-21T10:00:00Z"
    NewMessage:
      type: object
      properties:
        chatId:
          type: string
          description: Идентификатор чата, в который будет отправлено сообщение
          example: "chat123"
        content:
          type: string
          description: Текст сообщения
          example: "Hello, world!"
    Post:
      type: object
      properties:
        id:
          type: string
          description: Уникальный идентификатор поста
          example: "1"
        userId:
          type: string
          description: Идентификатор пользователя, создавшего пост
          example: "user123"
        content:
          type: string
          description: Текст поста
          example: "First post"
        createdAt:
          type: string
          format: date-time
          description: Дата и время создания поста
          example: "2024-11-21T10:00:00Z"
    NewPost:
      type: object
      properties:
        userId:
          type: string
          description: Идентификатор пользователя, создающего пост
          example: "user123"
        content:
          type: string
          description: Текст поста
          example: "First post"


    User:
      type: object
      properties:
        id:
          type: string
          description: Уникальный идентификатор пользователя
          example: "user123"
        name:
          type: string
          description: Имя пользователя
          example: "John Doe"
        email:
          type: string
          description: Электронная почта пользователя
          example: "john.doe@example.com"
        createdAt:
          type: string
          format: date-time
          description: Дата и время регистрации пользователя
          example: "2024-01-15T10:00:00Z"
    NewUser:
      type: object
      properties:
        name:
          type: string
          description: Имя пользователя
          example: "John Doe"
        email:
          type: string
          description: Электронная почта пользователя
          example: "john.doe@example.com"
    Chat:
      type: object
      properties:
        id:
          type: string
          description: Уникальный идентификатор чата
          example: "chat123"
        name:
          type: string
          description: Название чата
          example: "General Chat"
        createdAt:
          type: string
          format: date-time
          description: Дата и время создания чата
          example: "2024-01-15T10:00:00Z"
    NewChat:
      type: object
      properties:
        name:
          type: string
          description: Название чата
          example: "General Chat"
